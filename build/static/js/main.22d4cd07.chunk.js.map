{"version":3,"sources":["img/bosch.png","img/talebg.png","Main.jsx","App.js","index.js"],"names":["MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","zIndex","items","aws_assets","azure_assets","db_assets","getStyles","name","interfaces","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","Main","useTheme","React","useState","setInterfaces","awsCloud","setAwsCloud","azureCloud","setAzureCloud","db","setDB","awsAssetChange","event","value","target","split","azureAssetChange","DBAssetChange","openDialog","setOpenDialog","openDialog1","setOpenDialog1","successDialog","setSuccessDialog","drop","setDrop","data","setData","setValue","successDefault","loop","autoplay","animationData","successData","rendererSettings","preserveAspectRatio","failedDefault","failedData","handleOpen","Axios","post","length","random","getRandom","headers","timer","setInterval","get","then","res","clearInterval","getStatus","handleCloseDialog","handleCloseDialog1","handleCloseSuccessDialog","display","justifyContent","alignItems","height","AppBar","position","Toolbar","src","TALE","maxWidth","float","marginRight","marginTop","Stack","direction","FormControl","sx","m","InputLabel","id","Select","labelId","multiple","onChange","input","OutlinedInput","label","renderValue","selected","join","map","MenuItem","ListItemText","primary","Button","disabled","variant","onClick","option","FormControlLabel","control","Checkbox","checked","includes","newSelected","splice","push","console","log","handleCloudValue","Dialog","open","onClose","fullWidth","disableEscapeKeyDown","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","options","Backdrop","drawer","CircularProgress","color","className","Paper","bottom","left","right","backgroundColor","elevation","BOSCH","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.22d4cd07.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bosch.af79bc70.png\";","export default __webpack_public_path__ + \"static/media/talebg.dee4e0e2.png\";","import React, { useEffect } from \"react\";\r\n\r\nimport Lottie from 'react-lottie';\r\nimport successData from './lottie/success';\r\nimport failedData from './lottie/failed';\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Axios from \"axios\";\r\nimport BOSCH from \"../src/img/bosch.png\";\r\nimport TALE from \"../src/img/talebg.png\"\r\nimport random from 'random-key-generator';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Checkbox from '@mui/material/Checkbox';\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  ListItemText,\r\n  Stack,\r\n} from \"@mui/material\";\r\n\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n      zIndex: 3,\r\n    },\r\n  },\r\n};\r\n\r\nconst items = [\r\n  \"USB\",\r\n  \"BLE\",\r\n  \"JTag\",\r\n  \"WIFI\"\r\n];\r\n\r\nconst aws_assets = [\r\n  \"S3\",\r\n  \"EC2\",\r\n  \"DATALAKE\",\r\n  \"Beanstalk\"\r\n];\r\n\r\nconst azure_assets = [\r\n  \"Archive Storage\",\r\n  \"App Configuration\",\r\n  \"Azure SQL\"\r\n];\r\n\r\nconst db_assets = [\r\n  \"MongoDB\",\r\n  \"MySQL\",\r\n  \"Firebase\"\r\n];\r\n\r\nfunction getStyles(name, interfaces, theme) {\r\n  return {\r\n    fontWeight:\r\n      interfaces.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function Main() {\r\n  const theme = useTheme();\r\n  const [interfaces, setInterfaces] = React.useState([]);\r\n  const [awsCloud, setAwsCloud] = React.useState([]);\r\n  const [azureCloud, setAzureCloud] = React.useState([]);\r\n  const [db, setDB] = React.useState([]);\r\n\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setInterfaces(\r\n      // On autofill we get a stringified value.\r\n      typeof value === \"string\" ? value.split(\",\") : value\r\n    );\r\n\r\n  };\r\n\r\n  const awsAssetChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setAwsCloud(\r\n      typeof value === \"string\" ? value.split(\", \") : value\r\n    )\r\n  }\r\n\r\n  const azureAssetChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setAzureCloud(\r\n      typeof value === \"string\" ? value.split(\", \") : value\r\n    )\r\n  }\r\n\r\n  const DBAssetChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setDB(\r\n      typeof value === \"string\" ? value.split(\", \") : value\r\n    )\r\n  }\r\n\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n  const [openDialog1, setOpenDialog1] = React.useState(false);\r\n  const [successDialog, setSuccessDialog] = React.useState(false);\r\n  const [drop, setDrop] = React.useState(false);\r\n  const [data, setData] = React.useState(null);\r\n\r\n  const [value, setValue] = React.useState([]);\r\n\r\n  // const handleCloudValue = (event) => {\r\n  //   setValue(value === event.target.value ? '' : event.target.value);\r\n  //   // setChecked(true)\r\n  //   console.log(\"radio value is\", event.target.value)\r\n  // };\r\n\r\n  const handleCloudValue = (event, option) => {\r\n    const newSelected = [...value];\r\n    if (value.includes(option.id)) {\r\n      newSelected.splice(value.indexOf(option.id), 1);\r\n    } else {\r\n      newSelected.push(option.id);\r\n    }\r\n    console.log(\"Values is \", newSelected)\r\n    setValue(newSelected);\r\n  };\r\n\r\n\r\n\r\n  const options = [\r\n    { id: 'AWS', label: 'AWS Cloud' },\r\n    { id: 'AZURE', label: 'Azure Cloud' },\r\n    { id: 'DATABASES', label: 'Databases' },\r\n  ];\r\n\r\n  const successDefault = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: successData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\"\r\n    }\r\n  };\r\n\r\n  const failedDefault = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: failedData,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\"\r\n    }\r\n  };\r\n\r\n  function handleOpen() {\r\n    Axios.post(\"http://localhost:8080/addData\", {\r\n      \"interfaces\": (interfaces.length > 0) ? interfaces : \"\",\r\n      \"awsAssets\": (awsCloud.length > 0) ? awsCloud : \"\",\r\n      \"azureAssets\": (azureCloud.length > 0) ? azureCloud : \"\",\r\n      \"DBAssets\": (db.length > 0) ? db : \"\",\r\n      \"sessionId\": random.getRandom(20, 'TARA', '@', 'front')\r\n    }, { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } })\r\n\r\n    // Axios.post(\"http://localhost:8080/awsCloud\", {\r\n    //   \"awsAssets\": awsCloud,\r\n    //   \"sessionId\": random.getRandom(20, 'TARA', '@', 'front')\r\n    // }, { headers: { 'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*' } })\r\n\r\n    setDrop(true)\r\n\r\n    var timer = setInterval(function () {\r\n      getStatus(timer)\r\n    }, 1000);\r\n\r\n\r\n\r\n  }\r\n\r\n  function getStatus(timer) {\r\n    Axios.get('http://localhost:8080/checkStatus')\r\n      .then(\r\n        res => {\r\n          if (res.data === \"Completed\") {\r\n            setSuccessDialog(true)\r\n            setDrop(false)\r\n            clearInterval(timer)\r\n            setData(res.data)\r\n          }\r\n        })\r\n  }\r\n\r\n  const handleClickOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleCloseDialog1 = () => {\r\n    setOpenDialog1(false);\r\n    setInterfaces([]);\r\n    setAwsCloud([]);\r\n    setAzureCloud([]);\r\n    setDB([]);\r\n    setValue([]);\r\n  };\r\n\r\n  const handleClickOpenDialog1 = () => {\r\n    setOpenDialog1(true);\r\n  };\r\n\r\n  const handleCloseSuccessDialog = () => {\r\n    setSuccessDialog(false);\r\n    setInterfaces([]);\r\n    setAwsCloud([]);\r\n    setAzureCloud([]);\r\n    setDB([]);\r\n    setValue([]);\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <img src={TALE} style={{ height: \"50px\", maxWidth: \"50%\", float: \"right\", marginRight: \"10px\", marginTop: \"5px\" }} />\r\n          <h3 style={{ float: \"left\" }}>Si-TARA</h3>\r\n\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Stack direction=\"row\" alignItems=\"center\">\r\n        <Stack direction=\"column\" alignItems=\"center\">\r\n          <FormControl sx={{ m: 1, width: 300 }}>\r\n            <InputLabel id=\"demo-multiple-name-label\">\r\n              Select Interfaces and Protocols\r\n            </InputLabel>\r\n            <Select\r\n              style={{ zIndex: 2 }}\r\n              labelId=\"demo-multiple-name-label\"\r\n              id=\"demo-multiple-name\"\r\n              multiple\r\n              value={interfaces}\r\n              onChange={handleChange}\r\n              input={<OutlinedInput label=\"Select Interfaces and Protocols\" />}\r\n              renderValue={(selected) => selected.join(', ')}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {items.map((name) => (\r\n                <MenuItem\r\n                  key={name}\r\n                  value={name}\r\n                  style={getStyles(name, interfaces, theme)}\r\n                >\r\n                  {/* <Checkbox checked={interfaces.indexOf(name) > -1} /> */}\r\n                  <ListItemText primary={name} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n\r\n          </FormControl>\r\n\r\n          <Button\r\n            disabled={(interfaces.length <= 0) && (awsCloud.length <= 0) && (azureCloud.length <= 0) && (db.length <= 0)}\r\n            variant=\"contained\"\r\n            onClick={() => { handleClickOpenDialog() }}\r\n          >\r\n            Generate TARA\r\n          </Button>\r\n\r\n        </Stack>\r\n\r\n        {/* {data ? data : \"loading\"} */}\r\n\r\n        <Stack direction={\"column\"}>\r\n          <div\r\n\r\n          >\r\n            {value.map(option => {\r\n              if (option === \"AWS\") {\r\n                return (\r\n                  <div>\r\n                    <FormControl sx={{ m: 1, width: 300, marginTop: \"12px\" }}>\r\n                      <InputLabel id=\"demo-multiple-name-label\">\r\n                        Select AWS Assets\r\n                      </InputLabel>\r\n                      <Select\r\n                        style={{ zIndex: 2 }}\r\n                        labelId=\"demo-multiple-name-label\"\r\n                        id=\"demo-multiple-name\"\r\n                        multiple\r\n                        value={awsCloud}\r\n                        onChange={awsAssetChange}\r\n                        input={<OutlinedInput label=\"Select AWS Assets\" />}\r\n                        MenuProps={MenuProps}\r\n                      >\r\n                        {aws_assets.map((name) => (\r\n                          <MenuItem\r\n                            key={name}\r\n                            value={name}\r\n                            style={getStyles(name, awsCloud, theme)}\r\n                          >\r\n                            {name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                );\r\n              }\r\n              if (option === \"AZURE\") {\r\n                return (\r\n                  <div>\r\n                    <FormControl sx={{ m: 1, width: 300, marginTop: \"12px\" }}>\r\n                      <InputLabel id=\"demo-multiple-name-label\">\r\n                        Select Azure Assets\r\n                      </InputLabel>\r\n                      <Select\r\n                        style={{ zIndex: 2 }}\r\n                        labelId=\"demo-multiple-name-label\"\r\n                        id=\"demo-multiple-name\"\r\n                        multiple\r\n                        value={azureCloud}\r\n                        onChange={azureAssetChange}\r\n                        input={<OutlinedInput label=\"Select Azure Assets\" />}\r\n                        MenuProps={MenuProps}\r\n                      >\r\n                        {azure_assets.map((name) => (\r\n                          <MenuItem\r\n                            key={name}\r\n                            value={name}\r\n                            style={getStyles(name, azureCloud, theme)}\r\n                          >\r\n                            {name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                );\r\n              }\r\n              if (option === \"DATABASES\") {\r\n                return (\r\n                  <div>\r\n                    <FormControl sx={{ m: 1, width: 300, marginTop: \"12px\" }}>\r\n                      <InputLabel id=\"demo-multiple-name-label\">\r\n                        Select Databases\r\n                      </InputLabel>\r\n                      <Select\r\n                        style={{ zIndex: 2 }}\r\n                        labelId=\"demo-multiple-name-label\"\r\n                        id=\"demo-multiple-name\"\r\n                        multiple\r\n                        value={db}\r\n                        onChange={DBAssetChange}\r\n                        input={<OutlinedInput label=\"Select Databases\" />}\r\n                        MenuProps={MenuProps}\r\n                      >\r\n                        {db_assets.map((name) => (\r\n                          <MenuItem\r\n                            key={name}\r\n                            value={name}\r\n                            style={getStyles(name, db, theme)}\r\n                          >\r\n                            {name}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n\r\n            <div>\r\n              <Stack direction={\"row\"}>\r\n                {options.map((option) => (\r\n                  <FormControlLabel key={option.id} value={option.id} control={<Checkbox />} label={option.label} checked={value.includes(option.id)} onChange={event => handleCloudValue(event, option)} />\r\n                ))}\r\n              </Stack>\r\n            </div>\r\n          </div>\r\n\r\n        </Stack>\r\n\r\n      </Stack>\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        fullWidth\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        disableEscapeKeyDown\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"TARA Sheet Will be Generated for\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {interfaces.length >= 0 ? <div>{interfaces.join(\", \")}</div> : \"\"}\r\n            {awsCloud.length >= 0 ? <div>{awsCloud.join(\", \")}</div> : \"\"}\r\n            {azureCloud.length >= 0 ? <div>{azureCloud.join(\", \")}</div> : \"\"}\r\n            {db.length >= 0 ? <div>{db.join(\", \")}</div> : \"\"}\r\n            {/* <div>{awsCloud.length >= 0 ? awsCloud.join(\", \") : azureCloud.join(\", \")}</div> */}\r\n            <div>\r\n              <strong>Do You Wish to Continue?</strong>\r\n            </div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleCloseDialog();\r\n              setInterfaces([]);\r\n              setAwsCloud([]);\r\n              setAzureCloud([]);\r\n              setDB([]);\r\n              handleClickOpenDialog1();\r\n            }}\r\n          >\r\n            No\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              handleCloseDialog();\r\n              handleOpen();\r\n\r\n            }}\r\n            autoFocus\r\n          >\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={openDialog1}\r\n        onClose={handleCloseDialog1}\r\n        fullWidth\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        disableEscapeKeyDown\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Operation Aborted!\"}\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleCloseDialog1();\r\n\r\n            }}\r\n          >\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={successDialog}\r\n        onClose={handleCloseSuccessDialog}\r\n        fullWidth\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        disableEscapeKeyDown\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {((awsCloud.length > 0 || interfaces.length > 0 || db.length > 0 || azureCloud.length > 0) && data === \"Completed\") ? <div>Tara Sheet Created for {awsCloud.join(\", \")+\",\"} {azureCloud.join(\", \")+\",\"} {interfaces.join(\", \")} {db.join(\", \")}</div> : \"\"}\r\n\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {data === \"Completed\" ? <Lottie options={successDefault} height={200} width={200} /> : <Lottie options={failedDefault} height={200} width={200} />}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              handleCloseSuccessDialog();\r\n            }}\r\n          >\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Backdrop\r\n        sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={drop}\r\n      >\r\n        <Stack direction=\"column\" alignItems=\"center\" display=\"absolute\" >\r\n          <CircularProgress style={{ color: \"white\" }} />\r\n          <div className=\"circular-text\" style={{ marginTop: \"15px\", color: \"white\" }}>\r\n            TARA Sheet is Being Created Please Wait....\r\n          </div>\r\n        </Stack>\r\n      </Backdrop>\r\n\r\n      <Paper\r\n        sx={{\r\n          position: \"fixed\",\r\n          bottom: 0,\r\n          left: 0,\r\n          right: 0,\r\n          height: \"60px\",\r\n          backgroundColor: \"#1976d2\",\r\n        }}\r\n        elevation={3}\r\n      ><img src={BOSCH} style={{ height: \"50px\", maxWidth: \"50%\", float: \"right\", marginRight: \"10px\", marginTop: \"5px\" }} /></Paper>\r\n    </div >\r\n\r\n  );\r\n}\r\n","import Main from \"./Main\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\" style={{ height: \"100vh\" }}>\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n","import { Component, StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\n\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nconst root = createRoot(rootElement);\r\n\r\nroot.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);\r\n"],"sourceRoot":""}